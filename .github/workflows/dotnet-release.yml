name: .NET release

on:
  push:
    tags:
      - "v*"

env:
  DEFAULT_DOTNET_VERSION: "8.0.x"

jobs:
  build:
    strategy:
      matrix:
        os: [
            windows-latest,
            ubuntu-latest,
            #, macos-latest
          ]
      fail-fast: false
    runs-on: "${{ matrix.os }}"
    env:
      DOTNET_CONFIGURATION: Release

    steps:
      - uses: actions/checkout@v4
      - name: Setup Runtimes, Caching, and Tools
        uses: ./.github/actions/setup-runtimes-caching
        with:
          hash-file: ".github/workflows/dotnet-release.yml"

      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration ${{ env.DOTNET_CONFIGURATION }}
      - name: Test
        run: dotnet test --no-build --configuration ${{ env.DOTNET_CONFIGURATION }} --collect "XPlat Code Coverage" --results-directory test-results --logger trx /p:TrxLogFileNameSuffix=${{ matrix.os }}

      - name: Get git tag
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: git_tag
        run: "echo tag=${GITHUB_REF#refs/tags/v} >> $GITHUB_OUTPUT"

      - name: Publish NuGet package
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: dotnet pack --no-build -c ${{ env.DOTNET_CONFIGURATION }} -o ./nuget -p:PackageVersion=${{ steps.git_tag.outputs.tag }} /p:ReleaseBuild=true

      - name: Publish NuGet packages as artifacts
        uses: actions/upload-artifact@v4
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: nuget-packages
          path: ./nuget

      - name: Upload Package List
        uses: actions/upload-artifact@v4
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: nuget-list
          if-no-files-found: error
          path: |
            ${{ github.workspace }}/.github/workflows/SignClientFileList.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}
          path: |
            ${{ github.workspace }}/test-results/**

      - name: List NuGet packages in step summary
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ls -1 ${{ github.workspace }}/nuget/*.nupkg >> $GITHUB_STEP_SUMMARY

  test-reporting:
    permissions:
      contents: read
      actions: read
      checks: write
    runs-on: ubuntu-latest
    needs: build
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: ".NET Tests"
          path: "*.trx"
          reporter: dotnet-trx

  sign:
    needs: build
    runs-on: windows-latest
    permissions:
      id-token: write # Required for requesting the JWT

    steps:
      - name: Install .NET SDK v${{ env.DEFAULT_DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DEFAULT_DOTNET_VERSION }}

      - name: Download Package List
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: ${{ github.workspace }}/packages

      - name: Download NuGet package list
        uses: actions/download-artifact@v4
        with:
          name: nuget-list
          path: ${{ github.workspace }}

      - name: Install Signing Tool
        run: dotnet tool install --tool-path ./tools sign --version 0.9.1-beta.23356.1

      - name: Sign Packages
        run: >
          ./tools/sign code azure-key-vault
          **/*.nupkg
          --base-directory "${{ github.workspace }}/packages"
          --file-list "${{ github.workspace }}/SignClientFileList.txt"
          --timestamp-url "http://timestamp.digicert.com"
          --publisher-name ".NET Foundation"
          --description ".NET Aspire Community Toolkit"
          --description-url "https://github.com/CommunityToolkit/Aspire"
          --azure-key-vault-url "${{ secrets.SIGN_KEY_VAULT_URL }}"
          --azure-key-vault-client-id ${{ secrets.SIGN_CLIENT_ID }}
          --azure-key-vault-client-secret "${{ secrets.SIGN_CLIENT_SECRET }}"
          --azure-key-vault-tenant-id ${{ secrets.SIGN_TENANT_ID }}
          --azure-key-vault-certificate "${{ secrets.SIGN_CERTIFICATE }}"
          --verbosity Information

      - name: Upload Signed Packages as Artifacts (for release)
        uses: actions/upload-artifact@v4
        with:
          name: signed-nuget-packages
          if-no-files-found: error
          path: |
            ${{ github.workspace }}/packages/**/*.nupkg

  release:
    needs: sign
    runs-on: ubuntu-latest
    environment:
      name: release
    steps:
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: signed-nuget-packages

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./*.nupkg

  publish-nuget:
    needs: sign
    runs-on: ubuntu-latest
    environment:
      name: nuget-stable
    steps:
      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: signed-nuget-packages

      - name: Publish to NuGet
        run: dotnet nuget push ./*.nupkg --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_PACKAGE_PUSH_TOKEN }}

  publish-coverage:
    if: github.actor != 'dependabot[bot]'
    needs: build
    uses: ./.github/workflows/code-coverage.yml
    secrets: inherit
