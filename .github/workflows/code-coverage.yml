name: Code Coverage

on:
  workflow_call:

jobs:
  publish-coverage:
    permissions:
      pull-requests: write
      checks: write
      actions: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          pattern: test-results*

      - name: Combine coverage reports
        uses: danielpalme/ReportGenerator-GitHub-Action@5.3.11
        with:
          reports: "**/*.cobertura.xml"
          targetdir: "${{ github.workspace }}/report"
          reporttypes: "HtmlSummary;Cobertura;MarkdownSummary;MarkdownSummaryGithub"
          verbosity: "Info"
          title: "Code Coverage"
          tag: "${{ github.run_number }}_${{ github.run_id }}"
          customSettings: ""
          toolpath: "reportgeneratortool"
          assemblyfilters: "-*.AppHost;-CommunityToolkit.Aspire.Hosting.Azure.DataApiBuilder.BlazorApp;-*.ServiceDefaults;-CommunityToolkit.Aspire.Testing"

      - name: Upload combined coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ${{ github.workspace }}/report
          retention-days: 7

      - name: Publish code coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "report/Cobertura.xml"
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "60 80"

      - name: Upload combined coverage markdown
        uses: actions/upload-artifact@v4
        with:
          name: coverage-markdown
          path: ${{ github.workspace }}/code-coverage-results.md
          retention-days: 7

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: ${{ github.workspace }}/code-coverage-results.md

      - uses: actions/github-script@v7
        id: coverage-reporter
        with:
          script: |
            const fs = require('fs');
            const data = fs.readFileSync('${{ github.workspace }}/report/SummaryGithub.md', 'utf8');

            console.log(`Creating check aginst sha: ${context.sha}`);

            const createResp = await github.rest.checks.create({
              head_sha: context.sha,
              name: 'Code Coverage',
              status: 'in_progress',
              output: {
                title: 'Code Coverage',
                summary: ''
              },
              ...context.repo
            });

            const baseUrl = createResp.data.html_url;
            const check_run_id = createResp.data.id;

            console.log(`Check run created: ${baseUrl}`);
            console.log(`Check run id: ${check_run_id}`);

            const updateResp = await github.rest.checks.update({
              check_run_id,
              name: 'Code Coverage',
              status: 'completed',
              conclusion: 'success',
              output: {
                title: 'Code Coverage',
                summary: '',
                text: data
              },
              ...context.repo
            });

            console.log(`Check run updated: ${updateResp.data.html_url}`);
            console.log(`Check run create response: ${updateResp.status}`);
            console.log((`Check run URL: ${updateResp.data.url}`));
