<Project>
    <Target Name="_CreateAspirePackageResources">

      <ItemGroup>
        <_AspirePackageResource  Include="@(PackageReference->WithMetadataValue('IsAspirePackageResource', 'true'))" />
      </ItemGroup>

    </Target>

    <!-- Generate the data structures for doing the codegen for package resources -->
    <Target Name="CreateAspirePackageMetadataSources"
            DependsOnTargets="_CreateAspireProjectResources;_CreateAspirePackageResources">
      <ItemGroup>
        <AspirePackageMetadataSource Include="@(_AspirePackageResource)" Condition="'@(_AspirePackageResource)' != ''">
          <ClassName Condition="%(_AspirePackageResource.AspirePackageMetadataTypeName) == ''">$([System.Text.RegularExpressions.Regex]::Replace($([System.IO.Path]::GetFileNameWithoutExtension(%(_AspirePackageResource.Identity))), $(_GeneratedClassNameFixupRegex), '_'))</ClassName>
          <ClassName Condition="%(_AspirePackageResource.AspirePackageMetadataTypeName) != ''">$([System.Text.RegularExpressions.Regex]::Replace(%(_AspirePackageResource.AspirePackageMetadataTypeName), $(_GeneratedClassNameFixupRegex), '_'))</ClassName>
          <PackageName>@(_AspirePackageResource->'%(Identity)'->Replace('.', '_'))</PackageName>
          <PackagePath>$(Pkg%(_AspirePackageResource.PackageName))</PackagePath>
          <PackageVersion Condition="'%(_AspirePackageResource.PackageVersion)' == ''">%(PackageVersion.PackageVersion)</PackageVersion>
          <PackagePath Condition="'%(AspirePackageMetadataSource.PackagePath)'==''">$([System.String]::new('$(NuGetPackageRoot)%(_AspirePackageResource.Identity)/%(_AspirePackageResource.PackageVersion)').ToLower())</PackagePath>
        </AspirePackageMetadataSource>
      </ItemGroup>
    </Target>

    <Target Name="_CSharpWritePackageMetadataSources" DependsOnTargets="CreateAspirePackageMetadataSources" Condition="'$(Language)' == 'C#'">
      <ItemGroup>
        <AspirePackageMetadataSource Update="@(AspirePackageMetadataSource)">
          <Source>
          <![CDATA[// <auto-generated/>

namespace Packages%3B

[global::System.CodeDom.Compiler.GeneratedCode("Aspire.Hosting", null)]
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage(Justification = "Generated code.")]
[global::System.Diagnostics.DebuggerDisplay("Type = {GetType().Name,nq}, ProjectPath = {ProjectPath}")]
]]>$(AspireGeneratedClassesVisibility)<![CDATA[ class ]]>%(ClassName)<![CDATA[ : global::Aspire.Hosting.IPackageMetadata
{
    public string PackageId => """]]>%(Identity)<![CDATA["""%3B
    public string PackagePath => """]]>%(PackagePath)<![CDATA["""%3B
}]]>
          </Source>
        </AspirePackageMetadataSource>
      </ItemGroup>

      <WriteLinesToFile File="$(_AspireIntermediatePath)references\%(AspirePackageMetadataSource.ClassName).PackageMetadata.g.cs"
                        Overwrite="true"
                        Lines="%(AspirePackageMetadataSource.Source)"
                        Condition="%(AspirePackageMetadataSource.ClassName) != ''"
                        WriteOnlyWhenDifferent="true" />
      <ItemGroup>
        <FileWrites Include="$(_AspireIntermediatePath)references\%(AspirePackageMetadataSource.ClassName).PackageMetadata.g.cs" />
        <Compile Include="$(_AspireIntermediatePath)references\%(AspirePackageMetadataSource.ClassName).PackageMetadata.g.cs"
                Condition="%(AspirePackageMetadataSource.ClassName) != ''" />
      </ItemGroup>
    </Target>

    <PropertyGroup>
      <!-- Easy extension point for adding new languages' write support. -->
      <WriteAspirePackageMetadataSourcesDependsOn>_CSharpWritePackageMetadataSources;</WriteAspirePackageMetadataSourcesDependsOn>
    </PropertyGroup>

    <!-- The purpose of this target is to take all of the generated package metadata and write them to the intermediate build directory
      and reference them for compilation. There will be a ClassName.PackageMetadata.g.cs file for each referenced project. -->
    <Target Name="WriteAspirePackageMetadataSources" DependsOnTargets="$(WriteAspirePackageMetadataSourcesDependsOn)" BeforeTargets="CoreCompile" />
</Project>