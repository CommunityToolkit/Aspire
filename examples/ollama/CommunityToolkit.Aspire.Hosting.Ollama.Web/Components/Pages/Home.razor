@page "/"
@using global::OllamaSharp
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<h1>Ollama demo</h1>

<p>Welcome to the OllamaOld demo!</p>
<p><input type="text" @bind-value="_prompt" />&nbsp;<button @onclick="GetPrompt">Ask</button></p>
<p>@_response</p>

<p>Welcome to the Ollama model reference demo!</p>
<p><input type="text" @bind-value="_chatprompt" />&nbsp;<button @onclick="GetPrompt2">Ask</button></p>
<p>@_chatresponse</p>

@code {
    private string _prompt = "";
    private string _response = "";

    private string _chatprompt = "";
    private string _chatresponse = "";

    [Inject(Key ="ollama")]
    public required IOllamaApiClient OllamaOldClient { get; set; }

    [Inject(Key ="llama")]
    public required IOllamaApiClient OllamaModelReferenceClient { get; set; }

    private async Task GetPrompt()
    {
        if (!string.IsNullOrWhiteSpace(_prompt))
        {
            bool gotResponse = false;
            _response = "Asking Ollama...";
            Chat chat = new(OllamaOldClient, "You are a demo application. Your name is ");
            await foreach (string answerToken in chat.Send(_prompt))
            {
                if (!gotResponse)
                {
                    _response = "";
                    gotResponse = true;
                }

                _response += answerToken;
                StateHasChanged();
            }
        }
    }

    private async Task GetPrompt2()
    {
        if (!string.IsNullOrWhiteSpace(_chatprompt))
        {
            bool gotResponse = false;
            _chatresponse = "Asking Ollama...";
            Chat chat = new(OllamaModelReferenceClient, "You are a demo application. Your name is ");
            await foreach (string answerToken in chat.Send(_chatprompt))
            {
                if (!gotResponse)
                {
                    _chatresponse = "";
                    gotResponse = true;
                }

                _chatresponse += answerToken;
                StateHasChanged();
            }
        }
    }
}
