//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class NeonBuilderExtensions
    {
        public static ApplicationModel.IResourceBuilder<ApplicationModel.NeonDatabaseResource> AddDatabase(this ApplicationModel.IResourceBuilder<ApplicationModel.NeonProjectResource> builder, string name, string? databaseName = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.NeonProjectResource> AddNeonProject(this IDistributedApplicationBuilder builder, string name, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource>? userName = null, ApplicationModel.IResourceBuilder<ApplicationModel.ParameterResource>? password = null, int? port = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.NeonProjectResource> WithDataBindMount(this ApplicationModel.IResourceBuilder<ApplicationModel.NeonProjectResource> builder, string source) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.NeonProjectResource> WithDataVolume(this ApplicationModel.IResourceBuilder<ApplicationModel.NeonProjectResource> builder, string? name = null) { throw null; }
    }
}

namespace Aspire.Hosting.ApplicationModel
{
    public partial class NeonDatabaseResource : Resource, IResourceWithConnectionString, IResourceWithParent<NeonProjectResource>, IResource, IManifestExpressionProvider, IValueProvider, IValueWithReferences
    {
        public NeonDatabaseResource(string name, string databaseName, NeonProjectResource parent) : base(default!) { }

        public ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public string DatabaseName { get { throw null; } }

        public NeonProjectResource Parent { get { throw null; } }
    }

    public partial class NeonProjectResource : ContainerResource, IResourceWithConnectionString, IResource, IManifestExpressionProvider, IValueProvider, IValueWithReferences
    {
        public NeonProjectResource(string name, ParameterResource userName, ParameterResource password) : base(default!, default) { }

        public ReferenceExpression ConnectionStringExpression { get { throw null; } }

        public ParameterResource PasswordParameter { get { throw null; } }

        public EndpointReference PrimaryEndpoint { get { throw null; } }

        public ParameterResource UserNameParameter { get { throw null; } }
    }
}
