#nullable enable
Aspire.Hosting.ApplicationModel.ActiveMQArtemisServerResource
Aspire.Hosting.ApplicationModel.ActiveMQArtemisServerResource.ActiveMQArtemisServerResource(string! name, Aspire.Hosting.ApplicationModel.ParameterResource? userName, Aspire.Hosting.ApplicationModel.ParameterResource! password, string! scheme) -> void
Aspire.Hosting.ApplicationModel.ActiveMQServerResourceBase
Aspire.Hosting.ApplicationModel.ActiveMQServerResourceBase.ActiveMQServerResourceBase(string! name, Aspire.Hosting.ApplicationModel.ParameterResource? userName, Aspire.Hosting.ApplicationModel.ParameterResource! password, string! scheme, CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings! settings) -> void
Aspire.Hosting.ApplicationModel.ActiveMQServerResourceBase.ActiveMqSettings.get -> CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings!
Aspire.Hosting.ApplicationModel.ActiveMQServerResourceBase.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.ApplicationModel.ActiveMQServerResourceBase.PasswordParameter.get -> Aspire.Hosting.ApplicationModel.ParameterResource!
Aspire.Hosting.ApplicationModel.ActiveMQServerResourceBase.PrimaryEndpoint.get -> Aspire.Hosting.ApplicationModel.EndpointReference!
Aspire.Hosting.ApplicationModel.ActiveMQServerResourceBase.UserNameParameter.get -> Aspire.Hosting.ApplicationModel.ParameterResource?
*REMOVED*Aspire.Hosting.ApplicationModel.ActiveMQServerResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
*REMOVED*Aspire.Hosting.ApplicationModel.ActiveMQServerResource.PasswordParameter.get -> Aspire.Hosting.ApplicationModel.ParameterResource!
*REMOVED*Aspire.Hosting.ApplicationModel.ActiveMQServerResource.PrimaryEndpoint.get -> Aspire.Hosting.ApplicationModel.EndpointReference!
*REMOVED*Aspire.Hosting.ApplicationModel.ActiveMQServerResource.UserNameParameter.get -> Aspire.Hosting.ApplicationModel.ParameterResource?
static Aspire.Hosting.ActiveMQBuilderExtensions.AddActiveMQArtemis(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>? userName = null, Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ParameterResource!>? password = null, int? port = null, string! scheme = "tcp", int? webPort = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ActiveMQArtemisServerResource!>!
static Aspire.Hosting.ActiveMQBuilderExtensions.WithConfBindMount<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! source, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.ActiveMQBuilderExtensions.WithConfVolume<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string? name = null, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.ActiveMQBuilderExtensions.WithDataBindMount<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string! source, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
static Aspire.Hosting.ActiveMQBuilderExtensions.WithDataVolume<T>(this Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>! builder, string? name = null, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<T!>!
*REMOVED*static Aspire.Hosting.ActiveMQBuilderExtensions.WithConfBindMount(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ActiveMQServerResource!>! builder, string! source, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ActiveMQServerResource!>!
*REMOVED*static Aspire.Hosting.ActiveMQBuilderExtensions.WithConfVolume(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ActiveMQServerResource!>! builder, string? name = null, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ActiveMQServerResource!>!
*REMOVED*static Aspire.Hosting.ActiveMQBuilderExtensions.WithDataBindMount(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ActiveMQServerResource!>! builder, string! source, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ActiveMQServerResource!>!
*REMOVED*static Aspire.Hosting.ActiveMQBuilderExtensions.WithDataVolume(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ActiveMQServerResource!>! builder, string? name = null, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.ActiveMQServerResource!>!
CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings
CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings.ConfPath.get -> string!
CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings.DataPath.get -> string!
CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings.EnvironmentVariablePassword.get -> string!
CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings.EnvironmentVariableUsername.get -> string!
CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings.Image.get -> string!
CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings.JolokiaPath.get -> string!
CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings.Registry.get -> string!
CommunityToolkit.Aspire.Hosting.ActiveMQ.IActiveMQSettings.Tag.get -> string!
