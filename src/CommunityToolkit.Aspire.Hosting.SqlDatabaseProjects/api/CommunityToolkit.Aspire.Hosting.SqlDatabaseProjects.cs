//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public partial interface IPackageMetadata : ApplicationModel.IResourceAnnotation
    {
        string PackageId { get; }

        string PackagePath { get; }

        System.Version PackageVersion { get; }
    }

    public static partial class SqlProjectBuilderExtensions
    {
        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlPackageResource<TPackage>> AddSqlPackage<TPackage>(this IDistributedApplicationBuilder builder, string name)
            where TPackage : IPackageMetadata, new() { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> AddSqlProject(this IDistributedApplicationBuilder builder, string name) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> AddSqlProject<TProject>(this IDistributedApplicationBuilder builder, string name)
            where TProject : IProjectMetadata, new() { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> WithConfigureDacDeployOptions(this ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> builder, System.Action<Microsoft.SqlServer.Dac.DacDeployOptions> configureDeploymentOptions) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlPackageResource<TPackage>> WithConfigureDacDeployOptions<TPackage>(this ApplicationModel.IResourceBuilder<ApplicationModel.SqlPackageResource<TPackage>> builder, System.Action<Microsoft.SqlServer.Dac.DacDeployOptions> configureDeploymentOptions)
            where TPackage : IPackageMetadata { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> WithDacpac(this ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> builder, string dacpacPath) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlPackageResource<TPackage>> WithDacpac<TPackage>(this ApplicationModel.IResourceBuilder<ApplicationModel.SqlPackageResource<TPackage>> builder, string dacpacPath)
            where TPackage : IPackageMetadata { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> WithReference(this ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> builder, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> target) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> WithReference(this ApplicationModel.IResourceBuilder<ApplicationModel.SqlProjectResource> builder, ApplicationModel.IResourceBuilder<ApplicationModel.SqlServerDatabaseResource> target) { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlPackageResource<TPackage>> WithReference<TPackage>(this ApplicationModel.IResourceBuilder<ApplicationModel.SqlPackageResource<TPackage>> builder, ApplicationModel.IResourceBuilder<ApplicationModel.IResourceWithConnectionString> target)
            where TPackage : IPackageMetadata { throw null; }

        public static ApplicationModel.IResourceBuilder<ApplicationModel.SqlPackageResource<TPackage>> WithReference<TPackage>(this ApplicationModel.IResourceBuilder<ApplicationModel.SqlPackageResource<TPackage>> builder, ApplicationModel.IResourceBuilder<ApplicationModel.SqlServerDatabaseResource> target)
            where TPackage : IPackageMetadata { throw null; }
    }
}

namespace Aspire.Hosting.ApplicationModel
{
    public partial record ConfigureDacDeployOptionsAnnotation(System.Action<Microsoft.SqlServer.Dac.DacDeployOptions> ConfigureDeploymentOptions) : IResourceAnnotation
    {
    }

    public partial record DacpacMetadataAnnotation(string DacpacPath) : IResourceAnnotation
    {
    }

    public partial interface IResourceWithDacpac : IResource, IResourceWithWaitSupport
    {
    }

    public sealed partial class SqlPackageResource<TPackage> : Resource, IResourceWithWaitSupport, IResource, IResourceWithDacpac where TPackage : IPackageMetadata
    {
        public SqlPackageResource(string name) : base(default!) { }

        Microsoft.SqlServer.Dac.DacDeployOptions IResourceWithDacpac.GetDacpacDeployOptions() { throw null; }

        string IResourceWithDacpac.GetDacpacPath() { throw null; }
    }

    public sealed partial class SqlProjectResource : Resource, IResourceWithWaitSupport, IResource, IResourceWithDacpac
    {
        public SqlProjectResource(string name) : base(default!) { }

        Microsoft.SqlServer.Dac.DacDeployOptions IResourceWithDacpac.GetDacpacDeployOptions() { throw null; }

        string IResourceWithDacpac.GetDacpacPath() { throw null; }
    }
}