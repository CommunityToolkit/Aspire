#nullable enable
Aspire.Hosting.ApplicationModel.RavenDBServerResource
Aspire.Hosting.ApplicationModel.RavenDBServerResource.RavenDBServerResource(string! name, bool isSecured) -> void
Aspire.Hosting.ApplicationModel.RavenDBServerResource.PrimaryEndpoint.get -> Aspire.Hosting.ApplicationModel.EndpointReference!
Aspire.Hosting.ApplicationModel.RavenDBServerResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
Aspire.Hosting.ApplicationModel.RavenDBServerResource.Databases.get -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>!
Aspire.Hosting.RavenDBBuilderExtensions
static Aspire.Hosting.RavenDBBuilderExtensions.AddDatabase(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.RavenDBServerResource!>! builder, string! name, string? databaseName = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.RavenDBDatabaseResource!>!
static Aspire.Hosting.RavenDBBuilderExtensions.AddRavenDB(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.RavenDBServerResource!>!
static Aspire.Hosting.RavenDBBuilderExtensions.AddRavenDB(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, bool secured, System.Collections.Generic.Dictionary<string!, object!>! environmentVariables, int? port = null) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.RavenDBServerResource!>!
static Aspire.Hosting.RavenDBBuilderExtensions.AddRavenDB(this Aspire.Hosting.IDistributedApplicationBuilder! builder, string! name, CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings! serverSettings) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.RavenDBServerResource!>!
static Aspire.Hosting.RavenDBBuilderExtensions.WithDataBindMount(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.RavenDBServerResource!>! builder, string! source, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.RavenDBServerResource!>!
static Aspire.Hosting.RavenDBBuilderExtensions.WithDataVolume(this Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.RavenDBServerResource!>! builder, string? name = null, bool isReadOnly = false) -> Aspire.Hosting.ApplicationModel.IResourceBuilder<Aspire.Hosting.ApplicationModel.RavenDBServerResource!>!
Aspire.Hosting.ApplicationModel.RavenDBDatabaseResource
Aspire.Hosting.ApplicationModel.RavenDBDatabaseResource.RavenDBDatabaseResource(string! name, string! databaseName, Aspire.Hosting.ApplicationModel.RavenDBServerResource! parent) -> void
Aspire.Hosting.ApplicationModel.RavenDBDatabaseResource.Parent.get -> Aspire.Hosting.ApplicationModel.RavenDBServerResource!
Aspire.Hosting.ApplicationModel.RavenDBDatabaseResource.DatabaseName.get -> string!
Aspire.Hosting.ApplicationModel.RavenDBDatabaseResource.ConnectionStringExpression.get -> Aspire.Hosting.ApplicationModel.ReferenceExpression!
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBSecuredServerSettings
CommunityToolkit.Aspire.Hosting.RavenDB.LicensingOptions
CommunityToolkit.Aspire.Hosting.RavenDB.SetupMode
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings.RavenDBServerSettings() -> void
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings.ServerUrl.get -> string?
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings.ServerUrl.set -> void
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings.SetupMode.get -> CommunityToolkit.Aspire.Hosting.RavenDB.SetupMode
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings.LicensingOptions.get -> CommunityToolkit.Aspire.Hosting.RavenDB.LicensingOptions?
static CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings.Secured(string! domainUrl, string! certificatePath, string? certificatePassword = null, string? serverUrl = null) -> CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings!
static CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings.SecuredWithLetsEncrypt(string! domainUrl, string! certificatePath, string? certificatePassword = null, string? serverUrl = null) -> CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings!
static CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings.Unsecured() -> CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings!
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBServerSettings.WithLicense(string! license, bool eulaAccepted = true) -> void
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBSecuredServerSettings.RavenDBSecuredServerSettings() -> void
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBSecuredServerSettings.CertificatePath.get -> string!
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBSecuredServerSettings.CertificatePath.set -> void
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBSecuredServerSettings.CertificatePassword.get -> string?
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBSecuredServerSettings.CertificatePassword.set -> void
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBSecuredServerSettings.PublicServerUrl.get -> string!
CommunityToolkit.Aspire.Hosting.RavenDB.RavenDBSecuredServerSettings.PublicServerUrl.set -> void
CommunityToolkit.Aspire.Hosting.RavenDB.LicensingOptions.LicensingOptions() -> void
CommunityToolkit.Aspire.Hosting.RavenDB.LicensingOptions.License.get -> string!
CommunityToolkit.Aspire.Hosting.RavenDB.LicensingOptions.License.set -> void
CommunityToolkit.Aspire.Hosting.RavenDB.LicensingOptions.EulaAccepted.get -> bool
CommunityToolkit.Aspire.Hosting.RavenDB.LicensingOptions.EulaAccepted.set -> void