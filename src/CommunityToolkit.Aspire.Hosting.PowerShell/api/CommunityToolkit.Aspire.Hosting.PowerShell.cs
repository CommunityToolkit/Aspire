//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace CommunityToolkit.Aspire.Hosting.PowerShell
{
    public static partial class DistributedApplicationBuilderExtensions
    {
        public static global::Aspire.Hosting.ApplicationModel.IResourceBuilder<PowerShellRunspacePoolResource> AddPowerShell(this global::Aspire.Hosting.IDistributedApplicationBuilder builder, string name, System.Management.Automation.PSLanguageMode languageMode = System.Management.Automation.PSLanguageMode.ConstrainedLanguage, int minRunspaces = 1, int maxRunspaces = 5) { throw null; }
    }

    public partial class PowerShellRunspacePoolResource : global::Aspire.Hosting.ApplicationModel.Resource, System.IDisposable, global::Aspire.Hosting.ApplicationModel.IResourceWithWaitSupport, global::Aspire.Hosting.ApplicationModel.IResource
    {
        public PowerShellRunspacePoolResource(string name, System.Management.Automation.PSLanguageMode languageMode = System.Management.Automation.PSLanguageMode.ConstrainedLanguage, int minRunspaces = 1, int maxRunspaces = 5) : base(default!) { }

        public System.Management.Automation.PSLanguageMode LanguageMode { get { throw null; } }

        public int MaxRunspaces { get { throw null; } }

        public int MinRunspaces { get { throw null; } }

        public System.Management.Automation.Runspaces.RunspacePool? Pool { get { throw null; } }

        void System.IDisposable.Dispose() { }
    }

    public static partial class PowerShellRunspacePoolResourceBuilderExtensions
    {
        public static global::Aspire.Hosting.ApplicationModel.IResourceBuilder<PowerShellScriptResource> AddScript(this global::Aspire.Hosting.ApplicationModel.IResourceBuilder<PowerShellRunspacePoolResource> builder, string name, string script) { throw null; }

        public static global::Aspire.Hosting.ApplicationModel.IResourceBuilder<PowerShellRunspacePoolResource> WithReference(this global::Aspire.Hosting.ApplicationModel.IResourceBuilder<PowerShellRunspacePoolResource> builder, global::Aspire.Hosting.ApplicationModel.IResourceBuilder<global::Aspire.Hosting.ApplicationModel.IResourceWithConnectionString> source, string? connectionName = null, bool optional = false) { throw null; }
    }

    public partial record PowerShellScriptArgsAnnotation(object[] Args) : global::Aspire.Hosting.ApplicationModel.IResourceAnnotation
    {
    }

    public partial class PowerShellScriptResource : global::Aspire.Hosting.ApplicationModel.Resource, System.IDisposable, global::Aspire.Hosting.ApplicationModel.IResourceWithEnvironment, global::Aspire.Hosting.ApplicationModel.IResource, global::Aspire.Hosting.ApplicationModel.IResourceWithWaitSupport, global::Aspire.Hosting.ApplicationModel.IResourceWithArgs
    {
        public PowerShellScriptResource(string name, System.IO.FileInfo scriptFile, PowerShellRunspacePoolResource parent) : base(default!) { }

        public PowerShellScriptResource(string name, System.Management.Automation.ScriptBlock script, PowerShellRunspacePoolResource parent) : base(default!) { }

        public PowerShellRunspacePoolResource Parent { get { throw null; } }

        public System.Threading.Tasks.Task<bool> BreakAsync() { throw null; }

        public System.Threading.Tasks.Task StartAsync(Microsoft.Extensions.Logging.ILogger scriptLogger, global::Aspire.Hosting.ApplicationModel.ResourceNotificationService notificationService, System.Threading.CancellationToken cancellationToken = default) { throw null; }

        void System.IDisposable.Dispose() { }
    }

    public static partial class PowerShellScriptResourceBuilderExtensions
    {
        public static global::Aspire.Hosting.ApplicationModel.IResourceBuilder<PowerShellScriptResource> WithArgs(this global::Aspire.Hosting.ApplicationModel.IResourceBuilder<PowerShellScriptResource> builder, params object[] args) { throw null; }
    }

    public partial record PowerShellVariableReferenceAnnotation<T>(string Name, T Value) : global::Aspire.Hosting.ApplicationModel.IResourceAnnotation, System.IEquatable<PowerShellVariableReferenceAnnotation<T>>
    {
    }
}