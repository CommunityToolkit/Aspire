//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Aspire.Hosting
{
    public static partial class OpenTelemetryCollectorExtensions
    {
        public static ApplicationModel.IResourceBuilder<OpenTelemetryCollectorResource> AddOpenTelemetryCollector(this IDistributedApplicationBuilder builder, string name, System.Action<OpenTelemetryCollectorSettings>? configureSettings = null) { throw null; }

        public static ApplicationModel.IResourceBuilder<OpenTelemetryCollectorResource> WithAppForwarding(this ApplicationModel.IResourceBuilder<OpenTelemetryCollectorResource> builder) { throw null; }

        public static ApplicationModel.IResourceBuilder<OpenTelemetryCollectorResource> WithConfig(this ApplicationModel.IResourceBuilder<OpenTelemetryCollectorResource> builder, string configPath) { throw null; }
    }

    public partial class OpenTelemetryCollectorResource : ApplicationModel.ContainerResource
    {
        public OpenTelemetryCollectorResource(string name) : base(default!, default) { }

        public ApplicationModel.EndpointReference GrpcEndpoint { get { throw null; } }

        public ApplicationModel.EndpointReference HttpEndpoint { get { throw null; } }
    }

    public static partial class OpenTelemetryCollectorRoutingExtensions
    {
        public static ApplicationModel.IResourceBuilder<T> WithOpenTelemetryCollectorRouting<T>(this ApplicationModel.IResourceBuilder<T> builder, ApplicationModel.IResourceBuilder<OpenTelemetryCollectorResource> collectorBuilder)
            where T : ApplicationModel.IResourceWithEnvironment { throw null; }
    }

    public partial class OpenTelemetryCollectorSettings
    {
        public string CollectorImage { get { throw null; } }

        public string CollectorTag { get { throw null; } set { } }

        public bool DisableHealthcheck { get { throw null; } set { } }

        public bool EnableGrpcEndpoint { get { throw null; } set { } }

        public bool EnableHttpEndpoint { get { throw null; } set { } }

        public bool ForceNonSecureReceiver { get { throw null; } set { } }

        public string Image { get { throw null; } set { } }

        public string Registry { get { throw null; } set { } }
    }
}