<Project>
  <Import Project="..\Directory.Build.props" />

  <PropertyGroup>
    <IsPackable>true</IsPackable>

    <Authors>Microsoft.Toolkit,dotnetfoundation,Community Toolkit</Authors>
    <Company>.NET Foundation</Company>
    <Copyright>(c) .NET Foundation and Contributors. All rights reserved.</Copyright>
    <NeutralLanguage>en</NeutralLanguage>
    <Product>CommunityToolkit.Aspire ($(NetVersion))</Product>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/CommunityToolkit/Aspire</PackageProjectUrl>
    <PackageIcon>nuget.png</PackageIcon>
    <RepositoryUrl>https://github.com/CommunityToolkit/Aspire</RepositoryUrl>
    <VersionPrefix>$(AspireMajorVersion).$(ToolkitMinorVersion).$(ToolkitPatchVersion)</VersionPrefix>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>

    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <DebugType>embedded</DebugType>
    <ContinuousIntegrationBuild Condition="'$(CI)' == 'true'">true</ContinuousIntegrationBuild>

    <DocsPath>README.md</DocsPath>
    <PackageReadmeFile>$(DocsPath)</PackageReadmeFile>
    <PackageOutputPath>../../nuget</PackageOutputPath>
    <PackageTags>aspire integration communitytoolkit dotnetcommunitytoolkit $(AdditionalPackageTags)</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Aspire.Hosting" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(DocsPath)">
      <Pack>true</Pack>
      <PackagePath>/</PackagePath>
    </None>
    <None Include="../../docs/images/nuget.png">
      <Pack>true</Pack>
      <PackagePath>/</PackagePath>
    </None>
  </ItemGroup>

  <!--
    Create local branding
  -->
  <PropertyGroup Condition=" '$(ContinuousIntegrationBuild)' == 'false' AND  '$(VersionSuffix)' == ''  ">
    <_VersionSuffix>$([System.DateTime]::Now.ToString(yyMMdd-HHmm))</_VersionSuffix>
    <VersionSuffix>dev.$(_VersionSuffix)</VersionSuffix>
    <PackageVersion>$(VersionPrefix)-$(VersionSuffix)</PackageVersion>
  </PropertyGroup>

</Project>